#platform=x86, AMD64, or Intel EM64T
#version=DEVEL

#---------------------------------------------------------------------------------
# System installation and partitioning

# Install OS instead of upgrade
install

# Use CDROM installation media
cdrom

# Use text mode install
text

# Do not configure the X Window System
skipx

# Install the bootloader with automatic settings and protect it against changes
bootloader --iscrypted --password=grub.pbkdf2.sha512.10000

#---------------------------------------------------------------------------------
# System partitioning

# Clear the Master Boot Record
zerombr

# Remove any partitions in the system to be installed
clearpart --all --initlabel

# create both the boot and /boot/efi in case the system is EFI-compatible
part /boot --fstype="ext4" --ondisk=sda --size=1024 --label=boot
part /boot/efi --fstype="efi" --ondisk=sda --size=200 --label=EFIBOOT --fsoptions=noexec,nodev,nosuid

# Set LVM as the partioning type, let it grow from an initial size on the main drive
part pv.01      --size=1000     --grow  --ondisk=sda

# Create the main volume group in the physical volume
volgroup vg00 pv.01

# Create the logical volumes in accordance with the CIS Benchmark
logvol swap               --vgname=vg00  --recommended  --name=swap
logvol /                  --vgname=vg00  --fstype=ext4  --name=root    --percent=40  --grow
logvol /home              --vgname=vg00  --fstype=ext4  --name=home    --percent=10  --grow  --fsoptions=nodev
logvol /tmp               --vgname=vg00  --fstype=ext4  --name=temp    --percent=10  --grow  --fsoptions=noexec,nodev,nosuid
logvol /var               --vgname=vg00  --fstype=ext4  --name=var     --percent=10  --grow
logvol /var/tmp           --vgname=vg00  --fstype=ext4  --name=vartmp  --percent=10  --grow  --fsoptions=noexec,nodev,nosuid
logvol /var/log           --vgname=vg00  --fstype=ext4  --name=log     --percent=10  --grow
logvol /var/log/audit     --vgname=vg00  --fstype=ext4  --name=audit   --percent=10  --grow

#---------------------------------------------------------------------------------
# System environment config

# Keyboard layouts
keyboard 'us'

# System language
lang en_NZ

# System timezone
timezone Pacific/Auckland

# set the root password and lock the user
rootpw --lock --iscrypted $6$PLACEHOLDERSHA512SALTEDHASHFORPASSWORD1

# Create the restricted group
group --name=netdev

# Create the sys admin
user --name=sysadmin --groups=wheel --iscrypted --password=$6$PLACEHOLDERSHA512SALTEDHASHFORPASSWORD2

# Create the restricted user
user --name=netadmin --groups=netdev --iscrypted --password=$6$PLACEHOLDERSHA512SALTEDHASHFORPASSWORD3

# System authorization information
auth --useshadow --passalgo=sha512

# SELinux configuration
selinux --enforcing

# Firewall configuration
firewall --enabled --service=ssh

# Enable the first adapter on list and disable IPv6
network  --bootproto=dhcp --activate --noipv6

# Enable or disable services
#services --disabled=postfix

# Reboot after installation
reboot --eject

#---------------------------------------------------------------------------------
# Addons
# Disable Kdump
%addon com_redhat_kdump --disable
%end

#---------------------------------------------------------------------------------
# Extra packages
%packages
net-tools
aide
tcp_wrappers
%include /tmp/virtualmachine
%end

#---------------------------------------------------------------------------------
# Pre processing commands
%pre --log=/tmp/ks-pre.log
#
# Following code is based on the work of Grzegorz Juszczak on tuxfixer.com
#
# Define the minimum storage in GBs
bm_storage_min_size=40
vm_storage_min_size=40

hw=$(virt-what | head -1)
if [ -z "$hw" ]; then
    whiptail --infobox --title "HARDWARE DETECTION" "Detected hardware: Bare Metal" 10 40 > /dev/console
    sleep 10
    clear
    capacity=$(fdisk -l | grep /dev/sda | cut -f 3 -d " " | cut -f 1 -d ".")
    sleep 1
    if [ "$capacity" -lt "$bm_storage_min_size" ]; then
        whiptail --infobox --title "HARD DISK REQUIREMENTS" "ERROR: not enough hard drive capacity for Bare Metal installation: $bm_storage_min_size GB. System will reboot now." 10 50 > /dev/console
        sleep 15
        reboot --eject
    else
        echo "" > /tmp/virtualmachine
    fi
elif [ "$hw" == "vmware" ]; then
    whiptail --infobox --title "HARDWARE DETECTION" "Detected hardware: EmC VMWare" 10 40 > /dev/console
    sleep 10
    clear
    capacity=$(fdisk -l | grep /dev/sda | cut -f 3 -d " " | cut -f 1 -d ".")
    sleep 1
    if [ "$capacity" -lt "$vm_storage_min_size" ]; then
        whiptail --infobox --title "HARD DISK REQUIREMENTS" "ERROR: not enough hard drive capacity for VMWare installation: $vm_storage_min_size GB. System will reboot now." 10 50 > /dev/console
        sleep 15
        reboot
    else
        echo "open-vm-tools" > /tmp/virtualmachine
        echo "fuse" >> /tmp/virtualmachine
        echo "fuse-libs" >> /tmp/virtualmachine
        echo "libdnet" >> /tmp/virtualmachine
        echo "libdrm" >> /tmp/virtualmachine
        echo "libicu" >> /tmp/virtualmachine
        echo "libmspack" >> /tmp/virtualmachine
        echo "libpciaccess" >> /tmp/virtualmachine
        echo "libtool-ltdl" >> /tmp/virtualmachine
        echo "libxslt" >> /tmp/virtualmachine
        echo "pciutils" >> /tmp/virtualmachine
        echo "xmlsec1" >> /tmp/virtualmachine
        echo "xmlsec1-openssl" >> /tmp/virtualmachine
    fi
elif [ "$hw" == "hyperv" ]; then
    whiptail --infobox --title "HARDWARE DETECTION" "Detected hardware: Microsoft Hyper-V" 10 40 > /dev/console
    sleep 10
    clear
    capacity=$(fdisk -l | grep /dev/sda | cut -f 3 -d " " | cut -f 1 -d ".")
    sleep 1
    if [ "$capacity" -lt "$vm_storage_min_size" ]; then
        whiptail --infobox --title "HARD DISK REQUIREMENTS" "ERROR: not enough hard drive capacity for Hyper-V installation: $vm_storage_min_size GB. System will reboot now." 10 50 > /dev/console
        sleep 15
        reboot
    else
        echo "hyperv-daemons" > /tmp/virtualmachine
        echo "hyperv-daemons-license" >> /tmp/virtualmachine
        echo "hypervfcopyd" >> /tmp/virtualmachine
        echo "hypervkvpd" >> /tmp/virtualmachine
        echo "hypervvssd" >> /tmp/virtualmachine
    fi
else
    whiptail --infobox --title "HARDWARE DETECTION" "WARNING: The following platform is not recognized: $hw. System will reboot now." 10 40 > /dev/console
    sleep 10
    reboot
fi
%end

#---------------------------------------------------------------------------------
# Post processing commands in a non chroot env
%post --nochroot --log=/mnt/sysimage/root/ks-post-nochroot.log

# Edit the console login message
rm /mnt/sysimage/etc/issue
echo -e "Authorized users only. All activity is being monitored and reported.\n" >> /mnt/sysimage/etc/issue

# Edit the post login message
echo -e "Welcome, all commands are being logged and reported.\n" > /mnt/sysimage/etc/motd

# Edit the pre SSH login message
echo -e "By using this system you hereby comply with the organization policies and rules.\n" > /mnt/sysimage/etc/issue.net

# Edit GRUBs name
sed -i 's/^GRUB_DISTRIBUTOR.*/GRUB_DISTRIBUTOR="BlackBox Appliance System"/' /mnt/sysimage/etc/default/grub

# Create the restricted bash and assign to limited user, chsh is not used as system is not yet initialized
cp /mnt/sysimage/bin/bash /mnt/sysimage/bin/rbash
echo '/bin/rbash' >> /mnt/sysimage/etc/shells
sed -i '/^netadmin/s/\x2fbin\x2fbash/\x2fbin\x2frbash/' /mnt/sysimage/etc/passwd

# create bin folder and link restricted binaries
mkdir /mnt/sysimage/home/netadmin/bin
ln -s /usr/bin/nmtui /mnt/sysimage/home/netadmin/bin/
ln -s /usr/bin/nmcli /mnt/sysimage/home/netadmin/bin/

# Edit the .bash_profile of the user to limit binaries
sed -i 's/^PATH.*/PATH=\x24HOME\x2fbin/' /mnt/sysimage/home/netadmin/.bash_profile

# Edit the .bashrc in case the PATH gets overriden before bash_profile
echo -e 'PATH=\x24HOME\x2fbin' >> /mnt/sysimage/home/netadmin/.bashrc
echo -e 'export PATH' >> /mnt/sysimage/home/netadmin/.bashrc

# Remove autocomplete so as to not allow to autowrite the filesystem structure
cat /mnt/sysimage/etc/inputrc > /mnt/sysimage/home/netadmin/.inputrc
echo "set disable-completion on" >> /mnt/sysimage/home/netadmin/.inputrc

# Add after login message for restricted user
echo 'echo -e "\nHi!, You have logged on with the network admin user.\n\nThe available commands are:\n\n- nmcli - Query and control NetworkManager devices.\n- nmtui - Configure your system\x27s network information and hostname.\n\nYour activity is being logged.\n"' >> /mnt/sysimage/home/netadmin/.bash_profile

# Lock the .bash_profile and .inputrc of the user to only be unlockable by root
chattr +i /mnt/sysimage/home/netadmin/.bashrc
chattr +i /mnt/sysimage/home/netadmin/.inputrc
chattr +i /mnt/sysimage/home/netadmin/.bash_profile

# Create access policy to allow restricted user to only modify networking configuration
echo -e "[Network Manager authorisation]\nIdentity=unix-group:netdev\nAction=org.freedesktop.NetworkManager.*;org.freedesktop.NetworkManager.settings.modify.system\nResultAny=yes\nResultInactive=yes\nResultActive=yes\n" >> /mnt/sysimage/etc/polkit-1/localauthority/50-local.d/90-nm-netdev.pkla

# Disable Ctrl-Alt-Del at system level to disallow KVM reboots unless VM KVM user has privs in the hypervisor
ln -sf /dev/null mnt/sysimage/etc/systemd/system/ctrl-alt-del.target

# Create the after installation bootstrap service
cp /run/install/repo/scripts/bootstrap_install.service /mnt/sysimage/etc/systemd/system/bootstrap_install.service
cp /run/install/repo/scripts/post_installation.sh /mnt/sysimage/usr/bin/post_installation.sh

chmod 644 /mnt/sysimage/usr/bin/post_installation.sh
chmod 644 /mnt/sysimage/etc/systemd/system/bootstrap_install.service

# Create rsyslog dir and copy syslog ca cert file if present in ISO
mkdir /mnt/sysimage/etc/rsyslog
chmod 600 /mnt/sysimage/etc/rsyslog
if [ -e "/run/install/repo/extras/syslogca.pem" ]; then
    cp /run/install/repo/extras/syslogca.pem /mnt/sysimage/etc/rsyslog/syslogca.pem
    chmod -R 600 /mnt/sysimage/etc/rsyslog/syslogca.pem
fi

# Set security options on /dev/shm in accordance with the CIS benchmark
echo "tmpfs /dev/shm                    tmpfs     defaults,nodev,nosuid,noexec        0 0" >> /mnt/sysimage/etc/fstab

# Set network adapter options in accordance with the CIS benchmark
echo "net.ipv4.conf.all.send_redirects = 0 " > /mnt/sysimage/etc/sysctl.d/CIS.conf
echo "net.ipv4.conf.default.send_redirects = 0" >> /mnt/sysimage/etc/sysctl.d/CIS.conf
echo "net.ipv4.conf.all.accept_redirects = 0" >> /mnt/sysimage/etc/sysctl.d/CIS.conf
echo "net.ipv4.conf.default.accept_redirects = 0" >> /mnt/sysimage/etc/sysctl.d/CIS.conf
echo "net.ipv4.conf.all.secure_redirects = 0" >> /mnt/sysimage/etc/sysctl.d/CIS.conf
echo "net.ipv4.conf.default.secure_redirects = 0" >> /mnt/sysimage/etc/sysctl.d/CIS.conf
echo "net.ipv4.conf.all.log_martians = 1" >> /mnt/sysimage/etc/sysctl.d/CIS.conf
echo "net.ipv4.conf.default.log_martians = 1" >> /mnt/sysimage/etc/sysctl.d/CIS.conf
echo "net.ipv6.conf.all.accept_ra = 0" >> /mnt/sysimage/etc/sysctl.d/CIS.conf
echo "net.ipv6.conf.default.accept_ra = 0" >> /mnt/sysimage/etc/sysctl.d/CIS.conf
echo "net.ipv6.conf.all.accept_redirects = 0" >> /mnt/sysimage/etc/sysctl.d/CIS.conf
echo "net.ipv6.conf.default.accept_redirects = 0" >> /mnt/sysimage/etc/sysctl.d/CIS.conf

# Set auditing parameters
echo "-a always,exit -F arch=b64 -S adjtimex -S settimeofday -k time-change" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b32 -S adjtimex -S settimeofday -S stime -k time-change" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b64 -S clock_settime -k time-change" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b32 -S clock_settime -k time-change" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /etc/localtime -p wa -k time-change" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /etc/group -p wa -k identity" >>/mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /etc/passwd -p wa -k identity" >>/mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /etc/gshadow -p wa -k identity" >>/mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /etc/shadow -p wa -k identity" >>/mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /etc/security/opasswd -p wa -k identity" >>/mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b64 -S sethostname -S setdomainname -k system-locale" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b32 -S sethostname -S setdomainname -k system-locale" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /etc/issue -p wa -k system-locale" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /etc/issue.net -p wa -k system-locale" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /etc/hosts -p wa -k system-locale" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /etc/sysconfig/network -p wa -k system-locale" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /etc/sysconfig/network-scripts/ -p wa -k system-locale" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /etc/selinux/ -p wa -k MAC-policy" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /usr/share/selinux/ -p wa -k MAC-policy" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /var/log/lastlog -p wa -k logins" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /var/run/faillog -p wa -k logins" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /var/run/utmp -p wa -k session" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /var/log/wtmp -p wa -k logins" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /var/log/btmp -p wa -k logins" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b64 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b32 -S chmod -S fchmod -S fchmodat -F auid>=500 -F auid!=4294967295 -k perm_mod" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b64 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b32 -S chown -S fchown -S fchownat -S lchown -F auid>=500 -F auid!=4294967295 -k perm_mod" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b64 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b32 -S setxattr -S lsetxattr -S fsetxattr -S removexattr -S lremovexattr -S fremovexattr -F auid>=500 -F auid!=4294967295 -k perm_mod" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EACCES -F auid>=500 -F auid!=4294967295 -k access" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b64 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access ">> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b32 -S creat -S open -S openat -S truncate -S ftruncate -F exit=-EPERM -F auid>=500 -F auid!=4294967295 -k access" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b64 -S mount -F auid>=500 -F auid!=4294967295 -k mounts" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b32 -S mount -F auid>=500 -F auid!=4294967295 -k mounts" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b64 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b32 -S unlink -S unlinkat -S rename -S renameat -F auid>=500 -F auid!=4294967295 -k delete" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /etc/sudoers -p wa -k scope" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /etc/sudoers.d/ -p wa -k scope" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /var/log/sudo.log -p wa -k actions" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /sbin/insmod -p x -k modules" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /sbin/rmmod -p x -k modules" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-w /sbin/modprobe -p x -k modules" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-a always,exit -F arch=b64 -S init_module -S delete_module -k modules" >> /mnt/sysimage/etc/audit/rules.d/audit.rules
echo "-e 2" >> /mnt/sysimage/etc/audit/rules.d/audit.rules

# Set postfix to only work internally in the system
sed -i '/^inet_interfaces/c\inet_interfaces = loopback-only' /mnt/sysimage/etc/postfix/main.cf

# Set the SSH Server parameters
sed -i '/LogLevel/s/^#//g' /mnt/sysimage/etc/ssh/sshd_config
sed -i '/IgnoreRhosts/s/^#//g' /mnt/sysimage/etc/ssh/sshd_config
sed -i '/PermitEmptyPasswords/s/^#//g' /mnt/sysimage/etc/ssh/sshd_config
sed -i '/PermitUserEnvironment/s/^#//g' /mnt/sysimage/etc/ssh/sshd_config

sed -i '/HostbasedAuthentication/c\HostbasedAuthentication no' /mnt/sysimage/etc/ssh/sshd_config
sed -i '/UseDNS/c\UseDNS no' /mnt/sysimage/etc/ssh/sshd_config
sed -i '/X11Forwarding/c\X11Forwarding no' /mnt/sysimage/etc/ssh/sshd_config
sed -i '/MaxAuthTries/c\MaxAuthTries 4' /mnt/sysimage/etc/ssh/sshd_config
sed -i '/PermitRootLogin/c\PermitRootLogin no' /mnt/sysimage/etc/ssh/sshd_config
sed -i '/ClientAliveInterval/c\ClientAliveInterval 300' /mnt/sysimage/etc/ssh/sshd_config
sed -i '/ClientAliveCountMax/c\ClientAliveCountMax 0' /mnt/sysimage/etc/ssh/sshd_config
sed -i '/LoginGraceTime/c\LoginGraceTime 60' /mnt/sysimage/etc/ssh/sshd_config
sed -i '/Banner/c\Banner \x2fetc\x2fissue.net' /mnt/sysimage/etc/ssh/sshd_config

echo "Protocol 2" >> /mnt/sysimage/etc/ssh/sshd_config
echo "" >> /mnt/sysimage/etc/ssh/sshd_config
echo "MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com"  >> /mnt/sysimage/etc/ssh/sshd_config
echo "" >> /mnt/sysimage/etc/ssh/sshd_config
echo "AllowUsers sysadmin netadmin" >> /mnt/sysimage/etc/ssh/sshd_config
echo "" >> /mnt/sysimage/etc/ssh/sshd_config

# Disable ssh commands for the restricted user group
echo "Match Group netdev" >> /mnt/sysimage/etc/ssh/sshd_config
echo -e "\tForceCommand none" >> /mnt/sysimage/etc/ssh/sshd_config
echo -e "\tAllowTcpForwarding no" >> /mnt/sysimage/etc/ssh/sshd_config
echo -e "\tGatewayPorts no" >> /mnt/sysimage/etc/ssh/sshd_config
echo -e "\tX11Forwarding no" >> /mnt/sysimage/etc/ssh/sshd_config

# Set sshd_config permissions
chmod 600 /mnt/sysimage/etc/ssh/sshd_config

# Set shell timeout
echo "export TMOUT=600" >> /mnt/sysimage/etc/bashrc
echo "export TMOUT=600" >> /mnt/sysimage/etc/profile

# Set user default umask
echo "umask 027" >> /mnt/sysimage/etc/bashrc
echo "umask 027" >> /mnt/sysimage/etc/profile

# Set the mandatory use of the wheel group for su usage
sed -i '/pam_wheel.so use_uid/s/^#//g' /mnt/sysimage/etc/pam.d/su

# Set chronyd settings
sed -i 's/OPTIONS="[^"]*/&-u chrony/' /mnt/sysimage/etc/sysconfig/chronyd

# Disable extra modules and prevent dynamic loading
echo "install dccp /bin/true" >> /mnt/sysimage/etc/modprobe.d/CIS.conf
echo "install sctp /bin/true" >> /mnt/sysimage/etc/modprobe.d/CIS.conf
echo "install rds /bin/true" >> /mnt/sysimage/etc/modprobe.d/CIS.conf
echo "install tipc /bin/true" >> /mnt/sysimage/etc/modprobe.d/CIS.conf

# Set logrotate max days retention
echo "maxage 90" >> /mnt/sysimage/etc/logrotate.conf

# Remove all consoles for root
echo > /mnt/sysimage/etc/securetty

# Set lockout policy on auth
echo "" >> /mnt/sysimage/etc/pam.d/system-auth
echo "auth        required      pam_faillock.so preauth audit silent deny=5 unlock_time=900" >> /mnt/sysimage/etc/pam.d/system-auth
echo "auth        [success=1 default=bad] pam_unix.so" >> /mnt/sysimage/etc/pam.d/system-auth
echo "auth        [default=die] pam_faillock.so authfail audit deny=5 unlock_time=900" >> /mnt/sysimage/etc/pam.d/system-auth
echo "auth        sufficient    pam_faillock.so authsucc audit deny=5 unlock_time=900" >> /mnt/sysimage/etc/pam.d/system-auth

echo "" >> /mnt/sysimage/etc/pam.d/password-auth
echo "auth        required      pam_faillock.so preauth audit silent deny=5 unlock_time=900" >> /mnt/sysimage/etc/pam.d/password-auth
echo "auth        [success=1 default=bad] pam_unix.so" >> /mnt/sysimage/etc/pam.d/password-auth
echo "auth        [default=die] pam_faillock.so authfail audit deny=5 unlock_time=900" >> /mnt/sysimage/etc/pam.d/password-auth
echo "auth        sufficient    pam_faillock.so authsucc audit deny=5 unlock_time=900" >> /mnt/sysimage/etc/pam.d/password-auth

# Set auth to remember used passwords
sed -Ei '/^password\s+sufficient\s+pam_unix.so/ s/$/ remember=5/' /mnt/sysimage/etc/pam.d/system-auth
sed -Ei '/^password\s+sufficient\s+pam_unix.so/ s/$/ remember=5/' /mnt/sysimage/etc/pam.d/password-auth

# Set minimum password requirements to min length of 14, and 1 of symbol, upper, lower, number
sed -i '/minlen/c\minlen = 14' /mnt/sysimage/etc/security/pwquality.conf
sed -i '/dcredit/c\dcredit = -1' /mnt/sysimage/etc/security/pwquality.conf
sed -i '/ucredit/c\ucredit = -1' /mnt/sysimage/etc/security/pwquality.conf
sed -i '/ocredit/c\ocredit = -1' /mnt/sysimage/etc/security/pwquality.conf
sed -i '/lcredit/c\lcredit = -1' /mnt/sysimage/etc/security/pwquality.conf

# Set passwords age and minimum time
sed -i '/^PASS_MAX_DAYS/c\PASS_MAX_DAYS   90' /mnt/sysimage/etc/login.defs
sed -i '/^PASS_MIN_DAYS/c\PASS_MIN_DAYS   7' /mnt/sysimage/etc/login.defs

%end

#---------------------------------------------------------------------------------
# Process post in a chroot env
%post --log=/root/ks-post-chroot.log
systemctl enable bootstrap_install

%end
